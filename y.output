Terminals which are not used

   RESERVED


Grammar

    0 $accept: FuncAndDeclarations $end

    1 FuncAndDeclarations: FuncDefinition
    2                    | FuncDeclaration
    3                    | Declaration
    4                    | FuncDefinition FuncAndDeclarations
    5                    | FuncDeclaration FuncAndDeclarations
    6                    | Declaration FuncAndDeclarations

    7 FuncDefinition: TypeSpec FuncDeclarator FuncBody

    8 FuncBody: LBRACE DeclarationAndStates RBRACE
    9         | LBRACE RBRACE

   10 DeclarationAndStates: DeclarationAndStates Statement
   11                     | DeclarationAndStates Declaration
   12                     | Statement
   13                     | Declaration

   14 FuncDeclaration: TypeSpec FuncDeclarator SEMI

   15 FuncDeclarator: ID LPAR ParamList RPAR

   16 ParamList: ParamDeclaration
   17          | ParamDeclaration COMMA ParamList

   18 ParamDeclaration: TypeSpec
   19                 | TypeSpec ID

   20 Declaration: error SEMI
   21            | TypeSpec AuxDeclarator SEMI

   22 AuxDeclarator: Declarator
   23              | AuxDeclarator COMMA Declarator

   24 TypeSpec: CHAR
   25         | INT
   26         | VOID
   27         | DOUBLE
   28         | SHORT

   29 Declarator: ID
   30           | ID ASSIGN Expr

   31 Statement: SEMI
   32          | Expr SEMI
   33          | LBRACE RBRACE
   34          | LBRACE AuxStatement RBRACE
   35          | LBRACE error RBRACE
   36          | IF LPAR Expr RPAR ErrorStatement
   37          | IF LPAR Expr RPAR ErrorStatement ELSE ErrorStatement
   38          | WHILE LPAR Expr RPAR ErrorStatement
   39          | RETURN SEMI
   40          | RETURN Expr SEMI

   41 ErrorStatement: Statement
   42               | error SEMI

   43 AuxStatement: AuxStatement ErrorStatement
   44             | ErrorStatement

   45 Expr: Expr ASSIGN Expr
   46     | Expr COMMA Expr
   47     | LPAR error RPAR
   48     | ExprOper
   49     | ExprLogic
   50     | ExprRelat
   51     | ExprSingleOp
   52     | ExprFunction
   53     | ExprPrim
   54     | ID LPAR error RPAR

   55 ExprOper: Expr PLUS Expr
   56         | Expr MINUS Expr
   57         | Expr MUL Expr
   58         | Expr DIV Expr
   59         | Expr MOD Expr

   60 ExprLogic: Expr OR Expr
   61          | Expr AND Expr
   62          | Expr BITWISEAND Expr
   63          | Expr BITWISEOR Expr
   64          | Expr BITWISEXOR Expr

   65 ExprRelat: Expr EQ Expr
   66          | Expr NE Expr
   67          | Expr LE Expr
   68          | Expr GE Expr
   69          | Expr LT Expr
   70          | Expr GT Expr

   71 ExprSingleOp: PLUS Expr
   72             | MINUS Expr
   73             | NOT Expr

   74 ExprFunction: ID LPAR RPAR
   75             | ID LPAR Expr RPAR

   76 ExprPrim: ID
   77         | INTLIT
   78         | REALLIT
   79         | CHRLIT
   80         | LPAR Expr RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 20 35 42 47 54
CHAR (258) 24
ELSE (259) 37
IF (260) 36 37
INT (261) 25
SHORT (262) 28
DOUBLE (263) 27
RETURN (264) 39 40
VOID (265) 26
WHILE (266) 38
BITWISEAND (267) 62
BITWISEOR (268) 63
BITWISEXOR (269) 64
AND (270) 61
ASSIGN (271) 30 45
MUL (272) 57
COMMA (273) 17 23 46
DIV (274) 58
EQ (275) 65
GE (276) 68
GT (277) 70
LBRACE (278) 8 9 33 34 35
LE (279) 67
LT (280) 69
MINUS (281) 56 72
MOD (282) 59
NE (283) 66
NOT (284) 73
OR (285) 60
PLUS (286) 55 71
RBRACE (287) 8 9 33 34 35
RPAR (288) 15 36 37 38 47 54 74 75 80
LPAR (289) 15 36 37 38 47 54 74 75 80
SEMI (290) 14 20 21 31 32 39 40 42
ID (291) 15 19 29 30 54 74 75 76
CHRLIT (292) 79
REALLIT (293) 78
RESERVED (294)
INTLIT (295) 77


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
FuncAndDeclarations (42)
    on left: 1 2 3 4 5 6, on right: 0 4 5 6
FuncDefinition (43)
    on left: 7, on right: 1 4
FuncBody (44)
    on left: 8 9, on right: 7
DeclarationAndStates (45)
    on left: 10 11 12 13, on right: 8 10 11
FuncDeclaration (46)
    on left: 14, on right: 2 5
FuncDeclarator (47)
    on left: 15, on right: 7 14
ParamList (48)
    on left: 16 17, on right: 15 17
ParamDeclaration (49)
    on left: 18 19, on right: 16 17
Declaration (50)
    on left: 20 21, on right: 3 6 11 13
AuxDeclarator (51)
    on left: 22 23, on right: 21 23
TypeSpec (52)
    on left: 24 25 26 27 28, on right: 7 14 18 19 21
Declarator (53)
    on left: 29 30, on right: 22 23
Statement (54)
    on left: 31 32 33 34 35 36 37 38 39 40, on right: 10 12 41
ErrorStatement (55)
    on left: 41 42, on right: 36 37 38 43 44
AuxStatement (56)
    on left: 43 44, on right: 34 43
Expr (57)
    on left: 45 46 47 48 49 50 51 52 53 54, on right: 30 32 36 37 38
    40 45 46 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 75 80
ExprOper (58)
    on left: 55 56 57 58 59, on right: 48
ExprLogic (59)
    on left: 60 61 62 63 64, on right: 49
ExprRelat (60)
    on left: 65 66 67 68 69 70, on right: 50
ExprSingleOp (61)
    on left: 71 72 73, on right: 51
ExprFunction (62)
    on left: 74 75, on right: 52
ExprPrim (63)
    on left: 76 77 78 79 80, on right: 53


state 0

    0 $accept: . FuncAndDeclarations $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    FuncAndDeclarations  go to state 7
    FuncDefinition       go to state 8
    FuncDeclaration      go to state 9
    Declaration          go to state 10
    TypeSpec             go to state 11


state 1

   20 Declaration: error . SEMI

    SEMI  shift, and go to state 12


state 2

   24 TypeSpec: CHAR .

    $default  reduce using rule 24 (TypeSpec)


state 3

   25 TypeSpec: INT .

    $default  reduce using rule 25 (TypeSpec)


state 4

   28 TypeSpec: SHORT .

    $default  reduce using rule 28 (TypeSpec)


state 5

   27 TypeSpec: DOUBLE .

    $default  reduce using rule 27 (TypeSpec)


state 6

   26 TypeSpec: VOID .

    $default  reduce using rule 26 (TypeSpec)


state 7

    0 $accept: FuncAndDeclarations . $end

    $end  shift, and go to state 13


state 8

    1 FuncAndDeclarations: FuncDefinition .
    4                    | FuncDefinition . FuncAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 1 (FuncAndDeclarations)

    FuncAndDeclarations  go to state 14
    FuncDefinition       go to state 8
    FuncDeclaration      go to state 9
    Declaration          go to state 10
    TypeSpec             go to state 11


state 9

    2 FuncAndDeclarations: FuncDeclaration .
    5                    | FuncDeclaration . FuncAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 2 (FuncAndDeclarations)

    FuncAndDeclarations  go to state 15
    FuncDefinition       go to state 8
    FuncDeclaration      go to state 9
    Declaration          go to state 10
    TypeSpec             go to state 11


state 10

    3 FuncAndDeclarations: Declaration .
    6                    | Declaration . FuncAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 3 (FuncAndDeclarations)

    FuncAndDeclarations  go to state 16
    FuncDefinition       go to state 8
    FuncDeclaration      go to state 9
    Declaration          go to state 10
    TypeSpec             go to state 11


state 11

    7 FuncDefinition: TypeSpec . FuncDeclarator FuncBody
   14 FuncDeclaration: TypeSpec . FuncDeclarator SEMI
   21 Declaration: TypeSpec . AuxDeclarator SEMI

    ID  shift, and go to state 17

    FuncDeclarator  go to state 18
    AuxDeclarator   go to state 19
    Declarator      go to state 20


state 12

   20 Declaration: error SEMI .

    $default  reduce using rule 20 (Declaration)


state 13

    0 $accept: FuncAndDeclarations $end .

    $default  accept


state 14

    4 FuncAndDeclarations: FuncDefinition FuncAndDeclarations .

    $default  reduce using rule 4 (FuncAndDeclarations)


state 15

    5 FuncAndDeclarations: FuncDeclaration FuncAndDeclarations .

    $default  reduce using rule 5 (FuncAndDeclarations)


state 16

    6 FuncAndDeclarations: Declaration FuncAndDeclarations .

    $default  reduce using rule 6 (FuncAndDeclarations)


state 17

   15 FuncDeclarator: ID . LPAR ParamList RPAR
   29 Declarator: ID .
   30           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 29 (Declarator)


state 18

    7 FuncDefinition: TypeSpec FuncDeclarator . FuncBody
   14 FuncDeclaration: TypeSpec FuncDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FuncBody  go to state 25


state 19

   21 Declaration: TypeSpec AuxDeclarator . SEMI
   23 AuxDeclarator: AuxDeclarator . COMMA Declarator

    COMMA  shift, and go to state 26
    SEMI   shift, and go to state 27


state 20

   22 AuxDeclarator: Declarator .

    $default  reduce using rule 22 (AuxDeclarator)


state 21

   30 Declarator: ID ASSIGN . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 36
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 22

   15 FuncDeclarator: ID LPAR . ParamList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParamList         go to state 43
    ParamDeclaration  go to state 44
    TypeSpec          go to state 45


state 23

    8 FuncBody: LBRACE . DeclarationAndStates RBRACE
    9         | LBRACE . RBRACE

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    IF       shift, and go to state 46
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 47
    VOID     shift, and go to state 6
    WHILE    shift, and go to state 48
    LBRACE   shift, and go to state 49
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 50
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 51
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    DeclarationAndStates  go to state 52
    Declaration           go to state 53
    TypeSpec              go to state 54
    Statement             go to state 55
    Expr                  go to state 56
    ExprOper              go to state 37
    ExprLogic             go to state 38
    ExprRelat             go to state 39
    ExprSingleOp          go to state 40
    ExprFunction          go to state 41
    ExprPrim              go to state 42


state 24

   14 FuncDeclaration: TypeSpec FuncDeclarator SEMI .

    $default  reduce using rule 14 (FuncDeclaration)


state 25

    7 FuncDefinition: TypeSpec FuncDeclarator FuncBody .

    $default  reduce using rule 7 (FuncDefinition)


state 26

   23 AuxDeclarator: AuxDeclarator COMMA . Declarator

    ID  shift, and go to state 57

    Declarator  go to state 58


state 27

   21 Declaration: TypeSpec AuxDeclarator SEMI .

    $default  reduce using rule 21 (Declaration)


state 28

   72 ExprSingleOp: MINUS . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 59
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 29

   73 ExprSingleOp: NOT . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 60
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 30

   71 ExprSingleOp: PLUS . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 61
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 31

   47 Expr: LPAR . error RPAR
   80 ExprPrim: LPAR . Expr RPAR

    error    shift, and go to state 62
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 63
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 32

   54 Expr: ID . LPAR error RPAR
   74 ExprFunction: ID . LPAR RPAR
   75             | ID . LPAR Expr RPAR
   76 ExprPrim: ID .

    LPAR  shift, and go to state 64

    $default  reduce using rule 76 (ExprPrim)


state 33

   79 ExprPrim: CHRLIT .

    $default  reduce using rule 79 (ExprPrim)


state 34

   78 ExprPrim: REALLIT .

    $default  reduce using rule 78 (ExprPrim)


state 35

   77 ExprPrim: INTLIT .

    $default  reduce using rule 77 (ExprPrim)


state 36

   30 Declarator: ID ASSIGN Expr .
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82

    $default  reduce using rule 30 (Declarator)


state 37

   48 Expr: ExprOper .

    $default  reduce using rule 48 (Expr)


state 38

   49 Expr: ExprLogic .

    $default  reduce using rule 49 (Expr)


state 39

   50 Expr: ExprRelat .

    $default  reduce using rule 50 (Expr)


state 40

   51 Expr: ExprSingleOp .

    $default  reduce using rule 51 (Expr)


state 41

   52 Expr: ExprFunction .

    $default  reduce using rule 52 (Expr)


state 42

   53 Expr: ExprPrim .

    $default  reduce using rule 53 (Expr)


state 43

   15 FuncDeclarator: ID LPAR ParamList . RPAR

    RPAR  shift, and go to state 83


state 44

   16 ParamList: ParamDeclaration .
   17          | ParamDeclaration . COMMA ParamList

    COMMA  shift, and go to state 84

    $default  reduce using rule 16 (ParamList)


state 45

   18 ParamDeclaration: TypeSpec .
   19                 | TypeSpec . ID

    ID  shift, and go to state 85

    $default  reduce using rule 18 (ParamDeclaration)


state 46

   36 Statement: IF . LPAR Expr RPAR ErrorStatement
   37          | IF . LPAR Expr RPAR ErrorStatement ELSE ErrorStatement

    LPAR  shift, and go to state 86


state 47

   39 Statement: RETURN . SEMI
   40          | RETURN . Expr SEMI

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 87
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 88
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 48

   38 Statement: WHILE . LPAR Expr RPAR ErrorStatement

    LPAR  shift, and go to state 89


state 49

   33 Statement: LBRACE . RBRACE
   34          | LBRACE . AuxStatement RBRACE
   35          | LBRACE . error RBRACE

    error    shift, and go to state 90
    IF       shift, and go to state 46
    RETURN   shift, and go to state 47
    WHILE    shift, and go to state 48
    LBRACE   shift, and go to state 49
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 91
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 51
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Statement       go to state 92
    ErrorStatement  go to state 93
    AuxStatement    go to state 94
    Expr            go to state 56
    ExprOper        go to state 37
    ExprLogic       go to state 38
    ExprRelat       go to state 39
    ExprSingleOp    go to state 40
    ExprFunction    go to state 41
    ExprPrim        go to state 42


state 50

    9 FuncBody: LBRACE RBRACE .

    $default  reduce using rule 9 (FuncBody)


state 51

   31 Statement: SEMI .

    $default  reduce using rule 31 (Statement)


state 52

    8 FuncBody: LBRACE DeclarationAndStates . RBRACE
   10 DeclarationAndStates: DeclarationAndStates . Statement
   11                     | DeclarationAndStates . Declaration

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    IF       shift, and go to state 46
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 47
    VOID     shift, and go to state 6
    WHILE    shift, and go to state 48
    LBRACE   shift, and go to state 49
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 95
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 51
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Declaration   go to state 96
    TypeSpec      go to state 54
    Statement     go to state 97
    Expr          go to state 56
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 53

   13 DeclarationAndStates: Declaration .

    $default  reduce using rule 13 (DeclarationAndStates)


state 54

   21 Declaration: TypeSpec . AuxDeclarator SEMI

    ID  shift, and go to state 57

    AuxDeclarator  go to state 19
    Declarator     go to state 20


state 55

   12 DeclarationAndStates: Statement .

    $default  reduce using rule 12 (DeclarationAndStates)


state 56

   32 Statement: Expr . SEMI
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    COMMA       shift, and go to state 71
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82
    SEMI        shift, and go to state 98


state 57

   29 Declarator: ID .
   30           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 29 (Declarator)


state 58

   23 AuxDeclarator: AuxDeclarator COMMA Declarator .

    $default  reduce using rule 23 (AuxDeclarator)


state 59

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr
   72 ExprSingleOp: MINUS Expr .

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 72 (ExprSingleOp)


state 60

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr
   73 ExprSingleOp: NOT Expr .

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 73 (ExprSingleOp)


state 61

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr
   71 ExprSingleOp: PLUS Expr .

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 71 (ExprSingleOp)


state 62

   47 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 99


state 63

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr
   80 ExprPrim: LPAR Expr . RPAR

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    COMMA       shift, and go to state 71
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82
    RPAR        shift, and go to state 100


state 64

   54 Expr: ID LPAR . error RPAR
   74 ExprFunction: ID LPAR . RPAR
   75             | ID LPAR . Expr RPAR

    error    shift, and go to state 101
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RPAR     shift, and go to state 102
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 103
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 65

   62 ExprLogic: Expr BITWISEAND . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 104
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 66

   63 ExprLogic: Expr BITWISEOR . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 105
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 67

   64 ExprLogic: Expr BITWISEXOR . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 106
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 68

   61 ExprLogic: Expr AND . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 107
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 69

   45 Expr: Expr ASSIGN . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 108
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 70

   57 ExprOper: Expr MUL . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 109
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 71

   46 Expr: Expr COMMA . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 110
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 72

   58 ExprOper: Expr DIV . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 111
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 73

   65 ExprRelat: Expr EQ . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 112
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 74

   68 ExprRelat: Expr GE . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 113
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 75

   70 ExprRelat: Expr GT . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 114
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 76

   67 ExprRelat: Expr LE . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 115
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 77

   69 ExprRelat: Expr LT . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 116
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 78

   56 ExprOper: Expr MINUS . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 117
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 79

   59 ExprOper: Expr MOD . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 118
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 80

   66 ExprRelat: Expr NE . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 119
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 81

   60 ExprLogic: Expr OR . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 120
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 82

   55 ExprOper: Expr PLUS . Expr

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 121
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 83

   15 FuncDeclarator: ID LPAR ParamList RPAR .

    $default  reduce using rule 15 (FuncDeclarator)


state 84

   17 ParamList: ParamDeclaration COMMA . ParamList

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParamList         go to state 122
    ParamDeclaration  go to state 44
    TypeSpec          go to state 45


state 85

   19 ParamDeclaration: TypeSpec ID .

    $default  reduce using rule 19 (ParamDeclaration)


state 86

   36 Statement: IF LPAR . Expr RPAR ErrorStatement
   37          | IF LPAR . Expr RPAR ErrorStatement ELSE ErrorStatement

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 123
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 87

   39 Statement: RETURN SEMI .

    $default  reduce using rule 39 (Statement)


state 88

   40 Statement: RETURN Expr . SEMI
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    COMMA       shift, and go to state 71
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82
    SEMI        shift, and go to state 124


state 89

   38 Statement: WHILE LPAR . Expr RPAR ErrorStatement

    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr          go to state 125
    ExprOper      go to state 37
    ExprLogic     go to state 38
    ExprRelat     go to state 39
    ExprSingleOp  go to state 40
    ExprFunction  go to state 41
    ExprPrim      go to state 42


state 90

   35 Statement: LBRACE error . RBRACE
   42 ErrorStatement: error . SEMI

    RBRACE  shift, and go to state 126
    SEMI    shift, and go to state 127


state 91

   33 Statement: LBRACE RBRACE .

    $default  reduce using rule 33 (Statement)


state 92

   41 ErrorStatement: Statement .

    $default  reduce using rule 41 (ErrorStatement)


state 93

   44 AuxStatement: ErrorStatement .

    $default  reduce using rule 44 (AuxStatement)


state 94

   34 Statement: LBRACE AuxStatement . RBRACE
   43 AuxStatement: AuxStatement . ErrorStatement

    error    shift, and go to state 128
    IF       shift, and go to state 46
    RETURN   shift, and go to state 47
    WHILE    shift, and go to state 48
    LBRACE   shift, and go to state 49
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 129
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 51
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Statement       go to state 92
    ErrorStatement  go to state 130
    Expr            go to state 56
    ExprOper        go to state 37
    ExprLogic       go to state 38
    ExprRelat       go to state 39
    ExprSingleOp    go to state 40
    ExprFunction    go to state 41
    ExprPrim        go to state 42


state 95

    8 FuncBody: LBRACE DeclarationAndStates RBRACE .

    $default  reduce using rule 8 (FuncBody)


state 96

   11 DeclarationAndStates: DeclarationAndStates Declaration .

    $default  reduce using rule 11 (DeclarationAndStates)


state 97

   10 DeclarationAndStates: DeclarationAndStates Statement .

    $default  reduce using rule 10 (DeclarationAndStates)


state 98

   32 Statement: Expr SEMI .

    $default  reduce using rule 32 (Statement)


state 99

   47 Expr: LPAR error RPAR .

    $default  reduce using rule 47 (Expr)


state 100

   80 ExprPrim: LPAR Expr RPAR .

    $default  reduce using rule 80 (ExprPrim)


state 101

   54 Expr: ID LPAR error . RPAR

    RPAR  shift, and go to state 131


state 102

   74 ExprFunction: ID LPAR RPAR .

    $default  reduce using rule 74 (ExprFunction)


state 103

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr
   75 ExprFunction: ID LPAR Expr . RPAR

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    COMMA       shift, and go to state 71
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82
    RPAR        shift, and go to state 132


state 104

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   62          | Expr BITWISEAND Expr .
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MUL    shift, and go to state 70
    DIV    shift, and go to state 72
    EQ     shift, and go to state 73
    GE     shift, and go to state 74
    GT     shift, and go to state 75
    LE     shift, and go to state 76
    LT     shift, and go to state 77
    MINUS  shift, and go to state 78
    MOD    shift, and go to state 79
    NE     shift, and go to state 80
    PLUS   shift, and go to state 82

    $default  reduce using rule 62 (ExprLogic)


state 105

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   63          | Expr BITWISEOR Expr .
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEXOR  shift, and go to state 67
    MUL         shift, and go to state 70
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    PLUS        shift, and go to state 82

    $default  reduce using rule 63 (ExprLogic)


state 106

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   64          | Expr BITWISEXOR Expr .
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    MUL         shift, and go to state 70
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    PLUS        shift, and go to state 82

    $default  reduce using rule 64 (ExprLogic)


state 107

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   61          | Expr AND Expr .
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    MUL         shift, and go to state 70
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    PLUS        shift, and go to state 82

    $default  reduce using rule 61 (ExprLogic)


state 108

   45 Expr: Expr . ASSIGN Expr
   45     | Expr ASSIGN Expr .
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82

    $default  reduce using rule 45 (Expr)


state 109

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   57         | Expr MUL Expr .
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 57 (ExprOper)


state 110

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   46     | Expr COMMA Expr .
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82

    $default  reduce using rule 46 (Expr)


state 111

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   58         | Expr DIV Expr .
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 58 (ExprOper)


state 112

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   65          | Expr EQ Expr .
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MUL    shift, and go to state 70
    DIV    shift, and go to state 72
    GE     shift, and go to state 74
    GT     shift, and go to state 75
    LE     shift, and go to state 76
    LT     shift, and go to state 77
    MINUS  shift, and go to state 78
    MOD    shift, and go to state 79
    PLUS   shift, and go to state 82

    $default  reduce using rule 65 (ExprRelat)


state 113

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   68          | Expr GE Expr .
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MUL    shift, and go to state 70
    DIV    shift, and go to state 72
    LE     shift, and go to state 76
    LT     shift, and go to state 77
    MINUS  shift, and go to state 78
    MOD    shift, and go to state 79
    PLUS   shift, and go to state 82

    $default  reduce using rule 68 (ExprRelat)


state 114

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr
   70          | Expr GT Expr .

    MUL    shift, and go to state 70
    DIV    shift, and go to state 72
    LE     shift, and go to state 76
    LT     shift, and go to state 77
    MINUS  shift, and go to state 78
    MOD    shift, and go to state 79
    PLUS   shift, and go to state 82

    $default  reduce using rule 70 (ExprRelat)


state 115

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   67          | Expr LE Expr .
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MUL    shift, and go to state 70
    DIV    shift, and go to state 72
    MINUS  shift, and go to state 78
    MOD    shift, and go to state 79
    PLUS   shift, and go to state 82

    $default  reduce using rule 67 (ExprRelat)


state 116

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   69          | Expr LT Expr .
   70          | Expr . GT Expr

    MUL    shift, and go to state 70
    DIV    shift, and go to state 72
    MINUS  shift, and go to state 78
    MOD    shift, and go to state 79
    PLUS   shift, and go to state 82

    $default  reduce using rule 69 (ExprRelat)


state 117

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   56         | Expr MINUS Expr .
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 56 (ExprOper)


state 118

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   59         | Expr MOD Expr .
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 59 (ExprOper)


state 119

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   66          | Expr NE Expr .
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MUL    shift, and go to state 70
    DIV    shift, and go to state 72
    GE     shift, and go to state 74
    GT     shift, and go to state 75
    LE     shift, and go to state 76
    LT     shift, and go to state 77
    MINUS  shift, and go to state 78
    MOD    shift, and go to state 79
    PLUS   shift, and go to state 82

    $default  reduce using rule 66 (ExprRelat)


state 120

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   60          | Expr OR Expr .
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    MUL         shift, and go to state 70
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    PLUS        shift, and go to state 82

    $default  reduce using rule 60 (ExprLogic)


state 121

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   55         | Expr PLUS Expr .
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 82

    $default  reduce using rule 55 (ExprOper)


state 122

   17 ParamList: ParamDeclaration COMMA ParamList .

    $default  reduce using rule 17 (ParamList)


state 123

   36 Statement: IF LPAR Expr . RPAR ErrorStatement
   37          | IF LPAR Expr . RPAR ErrorStatement ELSE ErrorStatement
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    COMMA       shift, and go to state 71
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82
    RPAR        shift, and go to state 133


state 124

   40 Statement: RETURN Expr SEMI .

    $default  reduce using rule 40 (Statement)


state 125

   38 Statement: WHILE LPAR Expr . RPAR ErrorStatement
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   55 ExprOper: Expr . PLUS Expr
   56         | Expr . MINUS Expr
   57         | Expr . MUL Expr
   58         | Expr . DIV Expr
   59         | Expr . MOD Expr
   60 ExprLogic: Expr . OR Expr
   61          | Expr . AND Expr
   62          | Expr . BITWISEAND Expr
   63          | Expr . BITWISEOR Expr
   64          | Expr . BITWISEXOR Expr
   65 ExprRelat: Expr . EQ Expr
   66          | Expr . NE Expr
   67          | Expr . LE Expr
   68          | Expr . GE Expr
   69          | Expr . LT Expr
   70          | Expr . GT Expr

    BITWISEAND  shift, and go to state 65
    BITWISEOR   shift, and go to state 66
    BITWISEXOR  shift, and go to state 67
    AND         shift, and go to state 68
    ASSIGN      shift, and go to state 69
    MUL         shift, and go to state 70
    COMMA       shift, and go to state 71
    DIV         shift, and go to state 72
    EQ          shift, and go to state 73
    GE          shift, and go to state 74
    GT          shift, and go to state 75
    LE          shift, and go to state 76
    LT          shift, and go to state 77
    MINUS       shift, and go to state 78
    MOD         shift, and go to state 79
    NE          shift, and go to state 80
    OR          shift, and go to state 81
    PLUS        shift, and go to state 82
    RPAR        shift, and go to state 134


state 126

   35 Statement: LBRACE error RBRACE .

    $default  reduce using rule 35 (Statement)


state 127

   42 ErrorStatement: error SEMI .

    $default  reduce using rule 42 (ErrorStatement)


state 128

   42 ErrorStatement: error . SEMI

    SEMI  shift, and go to state 127


state 129

   34 Statement: LBRACE AuxStatement RBRACE .

    $default  reduce using rule 34 (Statement)


state 130

   43 AuxStatement: AuxStatement ErrorStatement .

    $default  reduce using rule 43 (AuxStatement)


state 131

   54 Expr: ID LPAR error RPAR .

    $default  reduce using rule 54 (Expr)


state 132

   75 ExprFunction: ID LPAR Expr RPAR .

    $default  reduce using rule 75 (ExprFunction)


state 133

   36 Statement: IF LPAR Expr RPAR . ErrorStatement
   37          | IF LPAR Expr RPAR . ErrorStatement ELSE ErrorStatement

    error    shift, and go to state 128
    IF       shift, and go to state 46
    RETURN   shift, and go to state 47
    WHILE    shift, and go to state 48
    LBRACE   shift, and go to state 49
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 51
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Statement       go to state 92
    ErrorStatement  go to state 135
    Expr            go to state 56
    ExprOper        go to state 37
    ExprLogic       go to state 38
    ExprRelat       go to state 39
    ExprSingleOp    go to state 40
    ExprFunction    go to state 41
    ExprPrim        go to state 42


state 134

   38 Statement: WHILE LPAR Expr RPAR . ErrorStatement

    error    shift, and go to state 128
    IF       shift, and go to state 46
    RETURN   shift, and go to state 47
    WHILE    shift, and go to state 48
    LBRACE   shift, and go to state 49
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 51
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Statement       go to state 92
    ErrorStatement  go to state 136
    Expr            go to state 56
    ExprOper        go to state 37
    ExprLogic       go to state 38
    ExprRelat       go to state 39
    ExprSingleOp    go to state 40
    ExprFunction    go to state 41
    ExprPrim        go to state 42


state 135

   36 Statement: IF LPAR Expr RPAR ErrorStatement .
   37          | IF LPAR Expr RPAR ErrorStatement . ELSE ErrorStatement

    ELSE  shift, and go to state 137

    $default  reduce using rule 36 (Statement)


state 136

   38 Statement: WHILE LPAR Expr RPAR ErrorStatement .

    $default  reduce using rule 38 (Statement)


state 137

   37 Statement: IF LPAR Expr RPAR ErrorStatement ELSE . ErrorStatement

    error    shift, and go to state 128
    IF       shift, and go to state 46
    RETURN   shift, and go to state 47
    WHILE    shift, and go to state 48
    LBRACE   shift, and go to state 49
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    LPAR     shift, and go to state 31
    SEMI     shift, and go to state 51
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Statement       go to state 92
    ErrorStatement  go to state 138
    Expr            go to state 56
    ExprOper        go to state 37
    ExprLogic       go to state 38
    ExprRelat       go to state 39
    ExprSingleOp    go to state 40
    ExprFunction    go to state 41
    ExprPrim        go to state 42


state 138

   37 Statement: IF LPAR Expr RPAR ErrorStatement ELSE ErrorStatement .

    $default  reduce using rule 37 (Statement)
