Terminals which are not used

   RESERVED


Grammar

    0 $accept: Start $end

    1 Start: FuncAndDeclarations

    2 FuncAndDeclarations: FuncDefinition
    3                    | FuncDeclaration
    4                    | Declaration
    5                    | FuncAndDeclarations FuncDefinition
    6                    | FuncAndDeclarations FuncDeclaration
    7                    | FuncAndDeclarations Declaration

    8 FuncDefinition: TypeSpec FuncDeclarator FuncBody

    9 FuncBody: LBRACE DeclarationAndStates RBRACE
   10         | LBRACE RBRACE

   11 DeclarationAndStates: DeclarationAndStates Statement
   12                     | DeclarationAndStates Declaration
   13                     | Statement
   14                     | Declaration

   15 FuncDeclaration: TypeSpec FuncDeclarator SEMI

   16 FuncDeclarator: ID LPAR ParamList RPAR

   17 ParamList: ParamDeclaration
   18          | ParamList COMMA ParamDeclaration

   19 ParamDeclaration: TypeSpec
   20                 | TypeSpec ID

   21 Declaration: error SEMI
   22            | TypeSpec AuxDeclarator SEMI

   23 AuxDeclarator: Declarator
   24              | AuxDeclarator COMMA Declarator

   25 TypeSpec: CHAR
   26         | INT
   27         | VOID
   28         | DOUBLE
   29         | SHORT

   30 Declarator: ID
   31           | ID ASSIGN ExprComma

   32 Statement: SEMI
   33          | ExprComma SEMI
   34          | LBRACE RBRACE
   35          | LBRACE AuxStatement RBRACE
   36          | LBRACE error RBRACE
   37          | IF LPAR ExprComma RPAR ErrorStatement
   38          | IF LPAR ExprComma RPAR ErrorStatement ELSE ErrorStatement
   39          | WHILE LPAR ExprComma RPAR ErrorStatement
   40          | RETURN SEMI
   41          | RETURN ExprComma SEMI

   42 ErrorStatement: Statement
   43               | error SEMI

   44 AuxStatement: AuxStatement ErrorStatement
   45             | ErrorStatement

   46 ExprComma: ExprComma COMMA Expr
   47          | Expr

   48 ExprCall: ExprCall COMMA Expr
   49         | Expr

   50 Expr: Expr ASSIGN Expr
   51     | LPAR error RPAR
   52     | ExprOper
   53     | ExprLogic
   54     | ExprRelat
   55     | ExprSingleOp
   56     | ExprFunction
   57     | ExprPrim
   58     | ID LPAR error RPAR

   59 ExprOper: Expr PLUS Expr
   60         | Expr MINUS Expr
   61         | Expr MUL Expr
   62         | Expr DIV Expr
   63         | Expr MOD Expr

   64 ExprLogic: Expr OR Expr
   65          | Expr AND Expr
   66          | Expr BITWISEAND Expr
   67          | Expr BITWISEOR Expr
   68          | Expr BITWISEXOR Expr

   69 ExprRelat: Expr EQ Expr
   70          | Expr NE Expr
   71          | Expr LE Expr
   72          | Expr GE Expr
   73          | Expr LT Expr
   74          | Expr GT Expr

   75 ExprSingleOp: PLUS Expr
   76             | MINUS Expr
   77             | NOT Expr

   78 ExprFunction: ID LPAR RPAR
   79             | ID LPAR ExprCall RPAR

   80 ExprPrim: ID
   81         | INTLIT
   82         | REALLIT
   83         | CHRLIT
   84         | LPAR ExprComma RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 21 36 43 51 58
CHAR (258) 25
ELSE (259) 38
IF (260) 37 38
INT (261) 26
SHORT (262) 29
DOUBLE (263) 28
RETURN (264) 40 41
VOID (265) 27
WHILE (266) 39
BITWISEAND (267) 66
BITWISEOR (268) 67
BITWISEXOR (269) 68
AND (270) 65
ASSIGN (271) 31 50
MUL (272) 61
COMMA (273) 18 24 46 48
DIV (274) 62
EQ (275) 69
GE (276) 72
GT (277) 74
LBRACE (278) 9 10 34 35 36
LE (279) 71
LT (280) 73
MINUS (281) 60 76
MOD (282) 63
NE (283) 70
NOT (284) 77
OR (285) 64
PLUS (286) 59 75
RBRACE (287) 9 10 34 35 36
RPAR (288) 16 37 38 39 51 58 78 79 84
LPAR (289) 16 37 38 39 51 58 78 79 84
SEMI (290) 15 21 22 32 33 40 41 43
ID (291) 16 20 30 31 58 78 79 80
CHRLIT (292) 83
REALLIT (293) 82
RESERVED (294)
INTLIT (295) 81


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
Start (42)
    on left: 1, on right: 0
FuncAndDeclarations (43)
    on left: 2 3 4 5 6 7, on right: 1 5 6 7
FuncDefinition (44)
    on left: 8, on right: 2 5
FuncBody (45)
    on left: 9 10, on right: 8
DeclarationAndStates (46)
    on left: 11 12 13 14, on right: 9 11 12
FuncDeclaration (47)
    on left: 15, on right: 3 6
FuncDeclarator (48)
    on left: 16, on right: 8 15
ParamList (49)
    on left: 17 18, on right: 16 18
ParamDeclaration (50)
    on left: 19 20, on right: 17 18
Declaration (51)
    on left: 21 22, on right: 4 7 12 14
AuxDeclarator (52)
    on left: 23 24, on right: 22 24
TypeSpec (53)
    on left: 25 26 27 28 29, on right: 8 15 19 20 22
Declarator (54)
    on left: 30 31, on right: 23 24
Statement (55)
    on left: 32 33 34 35 36 37 38 39 40 41, on right: 11 13 42
ErrorStatement (56)
    on left: 42 43, on right: 37 38 39 44 45
AuxStatement (57)
    on left: 44 45, on right: 35 44
ExprComma (58)
    on left: 46 47, on right: 31 33 37 38 39 41 46 84
ExprCall (59)
    on left: 48 49, on right: 48 79
Expr (60)
    on left: 50 51 52 53 54 55 56 57 58, on right: 46 47 48 49 50 59
    60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
ExprOper (61)
    on left: 59 60 61 62 63, on right: 52
ExprLogic (62)
    on left: 64 65 66 67 68, on right: 53
ExprRelat (63)
    on left: 69 70 71 72 73 74, on right: 54
ExprSingleOp (64)
    on left: 75 76 77, on right: 55
ExprFunction (65)
    on left: 78 79, on right: 56
ExprPrim (66)
    on left: 80 81 82 83 84, on right: 57


state 0

    0 $accept: . Start $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    Start                go to state 7
    FuncAndDeclarations  go to state 8
    FuncDefinition       go to state 9
    FuncDeclaration      go to state 10
    Declaration          go to state 11
    TypeSpec             go to state 12


state 1

   21 Declaration: error . SEMI

    SEMI  shift, and go to state 13


state 2

   25 TypeSpec: CHAR .

    $default  reduce using rule 25 (TypeSpec)


state 3

   26 TypeSpec: INT .

    $default  reduce using rule 26 (TypeSpec)


state 4

   29 TypeSpec: SHORT .

    $default  reduce using rule 29 (TypeSpec)


state 5

   28 TypeSpec: DOUBLE .

    $default  reduce using rule 28 (TypeSpec)


state 6

   27 TypeSpec: VOID .

    $default  reduce using rule 27 (TypeSpec)


state 7

    0 $accept: Start . $end

    $end  shift, and go to state 14


state 8

    1 Start: FuncAndDeclarations .
    5 FuncAndDeclarations: FuncAndDeclarations . FuncDefinition
    6                    | FuncAndDeclarations . FuncDeclaration
    7                    | FuncAndDeclarations . Declaration

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 1 (Start)

    FuncDefinition   go to state 15
    FuncDeclaration  go to state 16
    Declaration      go to state 17
    TypeSpec         go to state 12


state 9

    2 FuncAndDeclarations: FuncDefinition .

    $default  reduce using rule 2 (FuncAndDeclarations)


state 10

    3 FuncAndDeclarations: FuncDeclaration .

    $default  reduce using rule 3 (FuncAndDeclarations)


state 11

    4 FuncAndDeclarations: Declaration .

    $default  reduce using rule 4 (FuncAndDeclarations)


state 12

    8 FuncDefinition: TypeSpec . FuncDeclarator FuncBody
   15 FuncDeclaration: TypeSpec . FuncDeclarator SEMI
   22 Declaration: TypeSpec . AuxDeclarator SEMI

    ID  shift, and go to state 18

    FuncDeclarator  go to state 19
    AuxDeclarator   go to state 20
    Declarator      go to state 21


state 13

   21 Declaration: error SEMI .

    $default  reduce using rule 21 (Declaration)


state 14

    0 $accept: Start $end .

    $default  accept


state 15

    5 FuncAndDeclarations: FuncAndDeclarations FuncDefinition .

    $default  reduce using rule 5 (FuncAndDeclarations)


state 16

    6 FuncAndDeclarations: FuncAndDeclarations FuncDeclaration .

    $default  reduce using rule 6 (FuncAndDeclarations)


state 17

    7 FuncAndDeclarations: FuncAndDeclarations Declaration .

    $default  reduce using rule 7 (FuncAndDeclarations)


state 18

   16 FuncDeclarator: ID . LPAR ParamList RPAR
   30 Declarator: ID .
   31           | ID . ASSIGN ExprComma

    ASSIGN  shift, and go to state 22
    LPAR    shift, and go to state 23

    $default  reduce using rule 30 (Declarator)


state 19

    8 FuncDefinition: TypeSpec FuncDeclarator . FuncBody
   15 FuncDeclaration: TypeSpec FuncDeclarator . SEMI

    LBRACE  shift, and go to state 24
    SEMI    shift, and go to state 25

    FuncBody  go to state 26


state 20

   22 Declaration: TypeSpec AuxDeclarator . SEMI
   24 AuxDeclarator: AuxDeclarator . COMMA Declarator

    COMMA  shift, and go to state 27
    SEMI   shift, and go to state 28


state 21

   23 AuxDeclarator: Declarator .

    $default  reduce using rule 23 (AuxDeclarator)


state 22

   31 Declarator: ID ASSIGN . ExprComma

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    ExprComma     go to state 37
    Expr          go to state 38
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 23

   16 FuncDeclarator: ID LPAR . ParamList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParamList         go to state 45
    ParamDeclaration  go to state 46
    TypeSpec          go to state 47


state 24

    9 FuncBody: LBRACE . DeclarationAndStates RBRACE
   10         | LBRACE . RBRACE

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    IF       shift, and go to state 48
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 49
    VOID     shift, and go to state 6
    WHILE    shift, and go to state 50
    LBRACE   shift, and go to state 51
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 52
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 53
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    DeclarationAndStates  go to state 54
    Declaration           go to state 55
    TypeSpec              go to state 56
    Statement             go to state 57
    ExprComma             go to state 58
    Expr                  go to state 38
    ExprOper              go to state 39
    ExprLogic             go to state 40
    ExprRelat             go to state 41
    ExprSingleOp          go to state 42
    ExprFunction          go to state 43
    ExprPrim              go to state 44


state 25

   15 FuncDeclaration: TypeSpec FuncDeclarator SEMI .

    $default  reduce using rule 15 (FuncDeclaration)


state 26

    8 FuncDefinition: TypeSpec FuncDeclarator FuncBody .

    $default  reduce using rule 8 (FuncDefinition)


state 27

   24 AuxDeclarator: AuxDeclarator COMMA . Declarator

    ID  shift, and go to state 59

    Declarator  go to state 60


state 28

   22 Declaration: TypeSpec AuxDeclarator SEMI .

    $default  reduce using rule 22 (Declaration)


state 29

   76 ExprSingleOp: MINUS . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 61
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 30

   77 ExprSingleOp: NOT . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 62
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 31

   75 ExprSingleOp: PLUS . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 63
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 32

   51 Expr: LPAR . error RPAR
   84 ExprPrim: LPAR . ExprComma RPAR

    error    shift, and go to state 64
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    ExprComma     go to state 65
    Expr          go to state 38
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 33

   58 Expr: ID . LPAR error RPAR
   78 ExprFunction: ID . LPAR RPAR
   79             | ID . LPAR ExprCall RPAR
   80 ExprPrim: ID .

    LPAR  shift, and go to state 66

    $default  reduce using rule 80 (ExprPrim)


state 34

   83 ExprPrim: CHRLIT .

    $default  reduce using rule 83 (ExprPrim)


state 35

   82 ExprPrim: REALLIT .

    $default  reduce using rule 82 (ExprPrim)


state 36

   81 ExprPrim: INTLIT .

    $default  reduce using rule 81 (ExprPrim)


state 37

   31 Declarator: ID ASSIGN ExprComma .
   46 ExprComma: ExprComma . COMMA Expr

    $default  reduce using rule 31 (Declarator)


state 38

   47 ExprComma: Expr .
   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    OR          shift, and go to state 83
    PLUS        shift, and go to state 84

    $default  reduce using rule 47 (ExprComma)


state 39

   52 Expr: ExprOper .

    $default  reduce using rule 52 (Expr)


state 40

   53 Expr: ExprLogic .

    $default  reduce using rule 53 (Expr)


state 41

   54 Expr: ExprRelat .

    $default  reduce using rule 54 (Expr)


state 42

   55 Expr: ExprSingleOp .

    $default  reduce using rule 55 (Expr)


state 43

   56 Expr: ExprFunction .

    $default  reduce using rule 56 (Expr)


state 44

   57 Expr: ExprPrim .

    $default  reduce using rule 57 (Expr)


state 45

   16 FuncDeclarator: ID LPAR ParamList . RPAR
   18 ParamList: ParamList . COMMA ParamDeclaration

    COMMA  shift, and go to state 85
    RPAR   shift, and go to state 86


state 46

   17 ParamList: ParamDeclaration .

    $default  reduce using rule 17 (ParamList)


state 47

   19 ParamDeclaration: TypeSpec .
   20                 | TypeSpec . ID

    ID  shift, and go to state 87

    $default  reduce using rule 19 (ParamDeclaration)


state 48

   37 Statement: IF . LPAR ExprComma RPAR ErrorStatement
   38          | IF . LPAR ExprComma RPAR ErrorStatement ELSE ErrorStatement

    LPAR  shift, and go to state 88


state 49

   40 Statement: RETURN . SEMI
   41          | RETURN . ExprComma SEMI

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 89
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    ExprComma     go to state 90
    Expr          go to state 38
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 50

   39 Statement: WHILE . LPAR ExprComma RPAR ErrorStatement

    LPAR  shift, and go to state 91


state 51

   34 Statement: LBRACE . RBRACE
   35          | LBRACE . AuxStatement RBRACE
   36          | LBRACE . error RBRACE

    error    shift, and go to state 92
    IF       shift, and go to state 48
    RETURN   shift, and go to state 49
    WHILE    shift, and go to state 50
    LBRACE   shift, and go to state 51
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 93
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 53
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Statement       go to state 94
    ErrorStatement  go to state 95
    AuxStatement    go to state 96
    ExprComma       go to state 58
    Expr            go to state 38
    ExprOper        go to state 39
    ExprLogic       go to state 40
    ExprRelat       go to state 41
    ExprSingleOp    go to state 42
    ExprFunction    go to state 43
    ExprPrim        go to state 44


state 52

   10 FuncBody: LBRACE RBRACE .

    $default  reduce using rule 10 (FuncBody)


state 53

   32 Statement: SEMI .

    $default  reduce using rule 32 (Statement)


state 54

    9 FuncBody: LBRACE DeclarationAndStates . RBRACE
   11 DeclarationAndStates: DeclarationAndStates . Statement
   12                     | DeclarationAndStates . Declaration

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    IF       shift, and go to state 48
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 49
    VOID     shift, and go to state 6
    WHILE    shift, and go to state 50
    LBRACE   shift, and go to state 51
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 97
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 53
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Declaration   go to state 98
    TypeSpec      go to state 56
    Statement     go to state 99
    ExprComma     go to state 58
    Expr          go to state 38
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 55

   14 DeclarationAndStates: Declaration .

    $default  reduce using rule 14 (DeclarationAndStates)


state 56

   22 Declaration: TypeSpec . AuxDeclarator SEMI

    ID  shift, and go to state 59

    AuxDeclarator  go to state 20
    Declarator     go to state 21


state 57

   13 DeclarationAndStates: Statement .

    $default  reduce using rule 13 (DeclarationAndStates)


state 58

   33 Statement: ExprComma . SEMI
   46 ExprComma: ExprComma . COMMA Expr

    COMMA  shift, and go to state 67
    SEMI   shift, and go to state 100


state 59

   30 Declarator: ID .
   31           | ID . ASSIGN ExprComma

    ASSIGN  shift, and go to state 22

    $default  reduce using rule 30 (Declarator)


state 60

   24 AuxDeclarator: AuxDeclarator COMMA Declarator .

    $default  reduce using rule 24 (AuxDeclarator)


state 61

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr
   76 ExprSingleOp: MINUS Expr .

    $default  reduce using rule 76 (ExprSingleOp)


state 62

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr
   77 ExprSingleOp: NOT Expr .

    $default  reduce using rule 77 (ExprSingleOp)


state 63

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr
   75 ExprSingleOp: PLUS Expr .

    $default  reduce using rule 75 (ExprSingleOp)


state 64

   51 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 101


state 65

   46 ExprComma: ExprComma . COMMA Expr
   84 ExprPrim: LPAR ExprComma . RPAR

    COMMA  shift, and go to state 67
    RPAR   shift, and go to state 102


state 66

   58 Expr: ID LPAR . error RPAR
   78 ExprFunction: ID LPAR . RPAR
   79             | ID LPAR . ExprCall RPAR

    error    shift, and go to state 103
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RPAR     shift, and go to state 104
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    ExprCall      go to state 105
    Expr          go to state 106
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 67

   46 ExprComma: ExprComma COMMA . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 107
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 68

   66 ExprLogic: Expr BITWISEAND . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 108
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 69

   67 ExprLogic: Expr BITWISEOR . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 109
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 70

   68 ExprLogic: Expr BITWISEXOR . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 110
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 71

   65 ExprLogic: Expr AND . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 111
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 72

   50 Expr: Expr ASSIGN . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 112
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 73

   61 ExprOper: Expr MUL . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 113
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 74

   62 ExprOper: Expr DIV . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 114
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 75

   69 ExprRelat: Expr EQ . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 115
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 76

   72 ExprRelat: Expr GE . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 116
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 77

   74 ExprRelat: Expr GT . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 117
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 78

   71 ExprRelat: Expr LE . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 118
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 79

   73 ExprRelat: Expr LT . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 119
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 80

   60 ExprOper: Expr MINUS . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 120
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 81

   63 ExprOper: Expr MOD . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 121
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 82

   70 ExprRelat: Expr NE . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 122
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 83

   64 ExprLogic: Expr OR . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 123
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 84

   59 ExprOper: Expr PLUS . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 124
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 85

   18 ParamList: ParamList COMMA . ParamDeclaration

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParamDeclaration  go to state 125
    TypeSpec          go to state 47


state 86

   16 FuncDeclarator: ID LPAR ParamList RPAR .

    $default  reduce using rule 16 (FuncDeclarator)


state 87

   20 ParamDeclaration: TypeSpec ID .

    $default  reduce using rule 20 (ParamDeclaration)


state 88

   37 Statement: IF LPAR . ExprComma RPAR ErrorStatement
   38          | IF LPAR . ExprComma RPAR ErrorStatement ELSE ErrorStatement

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    ExprComma     go to state 126
    Expr          go to state 38
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 89

   40 Statement: RETURN SEMI .

    $default  reduce using rule 40 (Statement)


state 90

   41 Statement: RETURN ExprComma . SEMI
   46 ExprComma: ExprComma . COMMA Expr

    COMMA  shift, and go to state 67
    SEMI   shift, and go to state 127


state 91

   39 Statement: WHILE LPAR . ExprComma RPAR ErrorStatement

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    ExprComma     go to state 128
    Expr          go to state 38
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 92

   36 Statement: LBRACE error . RBRACE
   43 ErrorStatement: error . SEMI

    RBRACE  shift, and go to state 129
    SEMI    shift, and go to state 130


state 93

   34 Statement: LBRACE RBRACE .

    $default  reduce using rule 34 (Statement)


state 94

   42 ErrorStatement: Statement .

    $default  reduce using rule 42 (ErrorStatement)


state 95

   45 AuxStatement: ErrorStatement .

    $default  reduce using rule 45 (AuxStatement)


state 96

   35 Statement: LBRACE AuxStatement . RBRACE
   44 AuxStatement: AuxStatement . ErrorStatement

    error    shift, and go to state 131
    IF       shift, and go to state 48
    RETURN   shift, and go to state 49
    WHILE    shift, and go to state 50
    LBRACE   shift, and go to state 51
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 132
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 53
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Statement       go to state 94
    ErrorStatement  go to state 133
    ExprComma       go to state 58
    Expr            go to state 38
    ExprOper        go to state 39
    ExprLogic       go to state 40
    ExprRelat       go to state 41
    ExprSingleOp    go to state 42
    ExprFunction    go to state 43
    ExprPrim        go to state 44


state 97

    9 FuncBody: LBRACE DeclarationAndStates RBRACE .

    $default  reduce using rule 9 (FuncBody)


state 98

   12 DeclarationAndStates: DeclarationAndStates Declaration .

    $default  reduce using rule 12 (DeclarationAndStates)


state 99

   11 DeclarationAndStates: DeclarationAndStates Statement .

    $default  reduce using rule 11 (DeclarationAndStates)


state 100

   33 Statement: ExprComma SEMI .

    $default  reduce using rule 33 (Statement)


state 101

   51 Expr: LPAR error RPAR .

    $default  reduce using rule 51 (Expr)


state 102

   84 ExprPrim: LPAR ExprComma RPAR .

    $default  reduce using rule 84 (ExprPrim)


state 103

   58 Expr: ID LPAR error . RPAR

    RPAR  shift, and go to state 134


state 104

   78 ExprFunction: ID LPAR RPAR .

    $default  reduce using rule 78 (ExprFunction)


state 105

   48 ExprCall: ExprCall . COMMA Expr
   79 ExprFunction: ID LPAR ExprCall . RPAR

    COMMA  shift, and go to state 135
    RPAR   shift, and go to state 136


state 106

   49 ExprCall: Expr .
   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    OR          shift, and go to state 83
    PLUS        shift, and go to state 84

    $default  reduce using rule 49 (ExprCall)


state 107

   46 ExprComma: ExprComma COMMA Expr .
   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    OR          shift, and go to state 83
    PLUS        shift, and go to state 84

    $default  reduce using rule 46 (ExprComma)


state 108

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   66          | Expr BITWISEAND Expr .
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    EQ     shift, and go to state 75
    GE     shift, and go to state 76
    GT     shift, and go to state 77
    LE     shift, and go to state 78
    LT     shift, and go to state 79
    MINUS  shift, and go to state 80
    MOD    shift, and go to state 81
    NE     shift, and go to state 82
    PLUS   shift, and go to state 84

    $default  reduce using rule 66 (ExprLogic)


state 109

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   67          | Expr BITWISEOR Expr .
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEXOR  shift, and go to state 70
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    PLUS        shift, and go to state 84

    $default  reduce using rule 67 (ExprLogic)


state 110

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   68          | Expr BITWISEXOR Expr .
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    PLUS        shift, and go to state 84

    $default  reduce using rule 68 (ExprLogic)


state 111

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   65          | Expr AND Expr .
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    PLUS        shift, and go to state 84

    $default  reduce using rule 65 (ExprLogic)


state 112

   50 Expr: Expr . ASSIGN Expr
   50     | Expr ASSIGN Expr .
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    OR          shift, and go to state 83
    PLUS        shift, and go to state 84

    $default  reduce using rule 50 (Expr)


state 113

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   61         | Expr MUL Expr .
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    $default  reduce using rule 61 (ExprOper)


state 114

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   62         | Expr DIV Expr .
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    $default  reduce using rule 62 (ExprOper)


state 115

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   69          | Expr EQ Expr .
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    GE     shift, and go to state 76
    GT     shift, and go to state 77
    LE     shift, and go to state 78
    LT     shift, and go to state 79
    MINUS  shift, and go to state 80
    MOD    shift, and go to state 81
    PLUS   shift, and go to state 84

    $default  reduce using rule 69 (ExprRelat)


state 116

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   72          | Expr GE Expr .
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MINUS  shift, and go to state 80
    MOD    shift, and go to state 81
    PLUS   shift, and go to state 84

    $default  reduce using rule 72 (ExprRelat)


state 117

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr
   74          | Expr GT Expr .

    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MINUS  shift, and go to state 80
    MOD    shift, and go to state 81
    PLUS   shift, and go to state 84

    $default  reduce using rule 74 (ExprRelat)


state 118

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   71          | Expr LE Expr .
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MINUS  shift, and go to state 80
    MOD    shift, and go to state 81
    PLUS   shift, and go to state 84

    $default  reduce using rule 71 (ExprRelat)


state 119

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   73          | Expr LT Expr .
   74          | Expr . GT Expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    MINUS  shift, and go to state 80
    MOD    shift, and go to state 81
    PLUS   shift, and go to state 84

    $default  reduce using rule 73 (ExprRelat)


state 120

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   60         | Expr MINUS Expr .
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 81

    $default  reduce using rule 60 (ExprOper)


state 121

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   63         | Expr MOD Expr .
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    $default  reduce using rule 63 (ExprOper)


state 122

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   70          | Expr NE Expr .
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 74
    GE     shift, and go to state 76
    GT     shift, and go to state 77
    LE     shift, and go to state 78
    LT     shift, and go to state 79
    MINUS  shift, and go to state 80
    MOD    shift, and go to state 81
    PLUS   shift, and go to state 84

    $default  reduce using rule 70 (ExprRelat)


state 123

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   64          | Expr OR Expr .
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    PLUS        shift, and go to state 84

    $default  reduce using rule 64 (ExprLogic)


state 124

   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   59         | Expr PLUS Expr .
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 81

    $default  reduce using rule 59 (ExprOper)


state 125

   18 ParamList: ParamList COMMA ParamDeclaration .

    $default  reduce using rule 18 (ParamList)


state 126

   37 Statement: IF LPAR ExprComma . RPAR ErrorStatement
   38          | IF LPAR ExprComma . RPAR ErrorStatement ELSE ErrorStatement
   46 ExprComma: ExprComma . COMMA Expr

    COMMA  shift, and go to state 67
    RPAR   shift, and go to state 137


state 127

   41 Statement: RETURN ExprComma SEMI .

    $default  reduce using rule 41 (Statement)


state 128

   39 Statement: WHILE LPAR ExprComma . RPAR ErrorStatement
   46 ExprComma: ExprComma . COMMA Expr

    COMMA  shift, and go to state 67
    RPAR   shift, and go to state 138


state 129

   36 Statement: LBRACE error RBRACE .

    $default  reduce using rule 36 (Statement)


state 130

   43 ErrorStatement: error SEMI .

    $default  reduce using rule 43 (ErrorStatement)


state 131

   43 ErrorStatement: error . SEMI

    SEMI  shift, and go to state 130


state 132

   35 Statement: LBRACE AuxStatement RBRACE .

    $default  reduce using rule 35 (Statement)


state 133

   44 AuxStatement: AuxStatement ErrorStatement .

    $default  reduce using rule 44 (AuxStatement)


state 134

   58 Expr: ID LPAR error RPAR .

    $default  reduce using rule 58 (Expr)


state 135

   48 ExprCall: ExprCall COMMA . Expr

    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Expr          go to state 139
    ExprOper      go to state 39
    ExprLogic     go to state 40
    ExprRelat     go to state 41
    ExprSingleOp  go to state 42
    ExprFunction  go to state 43
    ExprPrim      go to state 44


state 136

   79 ExprFunction: ID LPAR ExprCall RPAR .

    $default  reduce using rule 79 (ExprFunction)


state 137

   37 Statement: IF LPAR ExprComma RPAR . ErrorStatement
   38          | IF LPAR ExprComma RPAR . ErrorStatement ELSE ErrorStatement

    error    shift, and go to state 131
    IF       shift, and go to state 48
    RETURN   shift, and go to state 49
    WHILE    shift, and go to state 50
    LBRACE   shift, and go to state 51
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 53
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Statement       go to state 94
    ErrorStatement  go to state 140
    ExprComma       go to state 58
    Expr            go to state 38
    ExprOper        go to state 39
    ExprLogic       go to state 40
    ExprRelat       go to state 41
    ExprSingleOp    go to state 42
    ExprFunction    go to state 43
    ExprPrim        go to state 44


state 138

   39 Statement: WHILE LPAR ExprComma RPAR . ErrorStatement

    error    shift, and go to state 131
    IF       shift, and go to state 48
    RETURN   shift, and go to state 49
    WHILE    shift, and go to state 50
    LBRACE   shift, and go to state 51
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 53
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Statement       go to state 94
    ErrorStatement  go to state 141
    ExprComma       go to state 58
    Expr            go to state 38
    ExprOper        go to state 39
    ExprLogic       go to state 40
    ExprRelat       go to state 41
    ExprSingleOp    go to state 42
    ExprFunction    go to state 43
    ExprPrim        go to state 44


state 139

   48 ExprCall: ExprCall COMMA Expr .
   50 Expr: Expr . ASSIGN Expr
   59 ExprOper: Expr . PLUS Expr
   60         | Expr . MINUS Expr
   61         | Expr . MUL Expr
   62         | Expr . DIV Expr
   63         | Expr . MOD Expr
   64 ExprLogic: Expr . OR Expr
   65          | Expr . AND Expr
   66          | Expr . BITWISEAND Expr
   67          | Expr . BITWISEOR Expr
   68          | Expr . BITWISEXOR Expr
   69 ExprRelat: Expr . EQ Expr
   70          | Expr . NE Expr
   71          | Expr . LE Expr
   72          | Expr . GE Expr
   73          | Expr . LT Expr
   74          | Expr . GT Expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    EQ          shift, and go to state 75
    GE          shift, and go to state 76
    GT          shift, and go to state 77
    LE          shift, and go to state 78
    LT          shift, and go to state 79
    MINUS       shift, and go to state 80
    MOD         shift, and go to state 81
    NE          shift, and go to state 82
    OR          shift, and go to state 83
    PLUS        shift, and go to state 84

    $default  reduce using rule 48 (ExprCall)


state 140

   37 Statement: IF LPAR ExprComma RPAR ErrorStatement .
   38          | IF LPAR ExprComma RPAR ErrorStatement . ELSE ErrorStatement

    ELSE  shift, and go to state 142

    $default  reduce using rule 37 (Statement)


state 141

   39 Statement: WHILE LPAR ExprComma RPAR ErrorStatement .

    $default  reduce using rule 39 (Statement)


state 142

   38 Statement: IF LPAR ExprComma RPAR ErrorStatement ELSE . ErrorStatement

    error    shift, and go to state 131
    IF       shift, and go to state 48
    RETURN   shift, and go to state 49
    WHILE    shift, and go to state 50
    LBRACE   shift, and go to state 51
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    LPAR     shift, and go to state 32
    SEMI     shift, and go to state 53
    ID       shift, and go to state 33
    CHRLIT   shift, and go to state 34
    REALLIT  shift, and go to state 35
    INTLIT   shift, and go to state 36

    Statement       go to state 94
    ErrorStatement  go to state 143
    ExprComma       go to state 58
    Expr            go to state 38
    ExprOper        go to state 39
    ExprLogic       go to state 40
    ExprRelat       go to state 41
    ExprSingleOp    go to state 42
    ExprFunction    go to state 43
    ExprPrim        go to state 44


state 143

   38 Statement: IF LPAR ExprComma RPAR ErrorStatement ELSE ErrorStatement .

    $default  reduce using rule 38 (Statement)
